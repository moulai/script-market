{
  "id": "regex-script-group-filter-view",
  "password": "c21060534363d83190d6e1726b4c0170a8803b808526316ccaf5d3bf12878c64",
  "name": "正则&脚本自动分组+筛选查看",
  "author": "Lai",
  "version": "2025.05.06.0755",
  "tags": [
    "UI增强"
  ],
  "content": "const config_CONFIG={STORAGE_KEY_BASE:\"scriptGroupingEnabled\",getStorageKey:function(areaKey){return`${this.STORAGE_KEY_BASE}_${areaKey}`},GROUP_PREFIX_REGEX:/^(?:【([^】]+)】|\\[([^\\]]+)\\]|([^-\\s]+)-)\\s*(.+)$/,AREAS:{\"global-regex\":{titleSelector:\"#global_scripts_block > div:first-child\",listSelector:\"#saved_regex_scripts\",itemSelector:\".regex-script-label\",nameSelector:\".regex_script_name\",dragHandleSelector:\".drag-handle\",sortableId:\"#saved_regex_scripts\",isRegexType:!0},\"scoped-regex\":{titleSelector:\"#scoped_scripts_block .flex-container.alignItemsBaseline strong\",listSelector:\"#saved_scoped_scripts\",itemSelector:\".regex-script-label\",nameSelector:\".regex_script_name\",dragHandleSelector:\".drag-handle\",sortableId:\"#saved_scoped_scripts\",isRegexType:!0},\"global-script\":{titleSelector:'.settings-title-text:contains(\"全局脚本库\")',listSelector:\"#global-script-list\",itemSelector:\".script-item\",nameSelector:\".script-name\",dragHandleSelector:\".drag-handle\",sortableId:\"#global-script-list\",isRegexType:!1},\"scoped-script\":{titleSelector:'.settings-title-text:contains(\"局部脚本库\")',listSelector:\"#scoped-script-list\",itemSelector:\".script-item\",nameSelector:\".script-name\",dragHandleSelector:\".drag-handle\",sortableId:\"#scoped-script-list\",isRegexType:!1}},STYLES:{groupHeaderStyle:\"\\n            padding: 4px 10px;\\n            background: var(--SmartThemeBorderColor, rgba(240, 240, 240, 0.2));\\n            border-radius: 4px;\\n            margin: 4px 0;\\n            cursor: pointer;\\n            display: flex;\\n            justify-content: space-between;\\n            align-items: center;\\n            font-weight: bold;\\n            border-left: 2px solid var(--SmartThemeUnderlineColor, rgba(52, 152, 219, 0.4));\\n            width: 100%;\\n        \",groupContentStyle:\"\\n            padding-left: 6px;\\n            border-left: 1px dashed var(--SmartThemeEmColor, rgba(204, 204, 204, 0.4));\\n            margin-left: 12px;\\n            width: 100%;\\n        \",iconStyle:\"\\n            cursor: pointer;\\n            margin-left: 8px;\\n            font-size: 0.9em;\\n            color: var(--SmartThemeBodyColor, inherit);\\n        \",toggleAllButtonStyle:\"\\n            font-size: 0.9em;\\n            cursor: pointer;\\n            margin-left: 5px;\\n            color: var(--SmartThemeBodyColor, inherit);\\n        \"}};function groupScripts($items,nameSelector,isRegexType){const groups=[];let currentGroup=null,currentGroupItems=[];if(!$items||0===$items.length)return console.error(\"没有提供有效的条目列表进行分组\"),groups;$items.each((function(index){const $item=$(this),scriptName=function extractScriptName($item,nameSelector,isRegexType){try{let $nameElement=$item.find(nameSelector);if(0===$nameElement.length)if(isRegexType){const regexSelectors=[\".regex_script_name\",\".name\",\"div.flexGrow\",\"div:first\"];for(const selector of regexSelectors)if($nameElement=$item.find(selector),$nameElement.length>0)break}else{const scriptSelectors=[\".script-name\",\".name\",\".script-title\",\"div:first\"];for(const selector of scriptSelectors)if($nameElement=$item.find(selector),$nameElement.length>0)break}if($nameElement.length>0)return $nameElement.text().trim()}catch(e){console.error(\"提取脚本名称出错:\",e)}return null}($item,nameSelector,isRegexType);if(!scriptName)return console.warn(`项目 #${index} 无法提取名称，跳过分组`),null!==currentGroup&&currentGroupItems.length>0&&(groups.push({name:currentGroup,items:currentGroupItems.slice()}),currentGroupItems=[]),groups.push({name:null,items:[$item]}),currentGroup=null,!0;const groupName=function detectGroup(scriptName){if(!scriptName||\"string\"!=typeof scriptName)return null;const match=scriptName.match(config_CONFIG.GROUP_PREFIX_REGEX);return match?match[1]||match[2]||match[3]||\"未分组\":null}(scriptName);null===groupName?null===currentGroup?currentGroupItems.push($item):(groups.push({name:currentGroup,items:currentGroupItems.slice()}),currentGroup=null,currentGroupItems=[$item]):currentGroup===groupName?currentGroupItems.push($item):(currentGroupItems.length>0&&groups.push({name:currentGroup,items:currentGroupItems.slice()}),currentGroup=groupName,currentGroupItems=[$item])})),currentGroupItems.length>0&&groups.push({name:currentGroup,items:currentGroupItems.slice()});let groupedItems=0,namedGroups=0,unnamedGroups=0;return groups.forEach((group=>{null!==group.name?namedGroups++:unnamedGroups++,groupedItems+=group.items.length})),groupedItems!==$items.length&&console.warn(`警告：处理的项目数 (${groupedItems}) 与原始项目数 (${$items.length}) 不一致！`),console.debug(`[FilterGroup]分组完成: 共 ${groups.length} 个分组，其中命名分组 ${namedGroups} 个，未分组 ${unnamedGroups} 个，共处理 ${groupedItems} 个项目`),groups}function initializeUnifiedUI(){window.unifiedUIInitialized||(window.unifiedUIInitialized=!0,console.log(\"[FilterGroup]正在初始化统一UI处理模块...\"),function addControlIcons(){for(const[areaKey,config]of Object.entries(config_CONFIG.AREAS)){const $titleElem=$(config.titleSelector);if(0===$titleElem.length)continue;const filterIconId=`${areaKey}-filter-icon`;0===$(`#${filterIconId}`).length&&($titleElem.append(`<i id=\"${filterIconId}\" class=\"fa-solid fa-filter\" style=\"cursor:pointer; margin-left:8px; font-size:0.9em;\"></i>`),$(`#${filterIconId}`).off(\"click\").on(\"click\",(function(e){e.stopPropagation();const newState=(getFilterState(areaKey)+1)%3;localStorage.setItem(`regexFilter${capitalizeFirstLetter(areaKey)}`,newState),updateFilterIcon(areaKey),applyUIState(areaKey)})),updateFilterIcon(areaKey));const groupIconId=`${areaKey}-group-icon`;if(0===$(`#${groupIconId}`).length){const isGroupEnabled=getGroupingEnabledState(areaKey);$titleElem.append(`<i id=\"${groupIconId}\" class=\"fa-solid ${isGroupEnabled?\"fa-folder-open\":\"fa-folder\"}\" style=\"${config_CONFIG.STYLES.iconStyle}\" title=\"${isGroupEnabled?\"关闭分组\":\"开启分组\"}\"></i>`);const toggleAllId=`${areaKey}-toggle-all`;0===$(`#${toggleAllId}`).length&&($titleElem.append(`<i id=\"${toggleAllId}\" class=\"fa-solid fa-angle-down\" style=\"${config_CONFIG.STYLES.toggleAllButtonStyle}\" title=\"一键展开/折叠分组\"></i>`),isGroupEnabled?$(`#${toggleAllId}`).css(\"display\",\"\"):$(`#${toggleAllId}`).css(\"display\",\"none\"),bindToggleAllEvent(toggleAllId,areaKey)),$(`#${groupIconId}`).off(\"click\").on(\"click\",(function(e){e.stopPropagation();const newState=!getGroupingEnabledState(areaKey);localStorage.setItem(config_CONFIG.getStorageKey(areaKey),newState),updateGroupIcon(areaKey),applyUIState(areaKey)})),updateGroupIcon(areaKey)}const refreshIconId=`${areaKey}-refresh-icon`;0===$(`#${refreshIconId}`).length&&($titleElem.append(`<i id=\"${refreshIconId}\" class=\"fa-solid fa-rotate\" style=\"${config_CONFIG.STYLES.iconStyle}\" title=\"刷新\"></i>`),$(`#${refreshIconId}`).off(\"click\").on(\"click\",(function(e){e.stopPropagation(),applyAllUIStates()})))}}(),applyAllUIStates())}function getGroupingEnabledState(areaKey){return\"true\"===localStorage.getItem(config_CONFIG.getStorageKey(areaKey))}function getFilterState(areaKey){return parseInt(localStorage.getItem(`regexFilter${capitalizeFirstLetter(areaKey)}`)||\"0\")}function capitalizeFirstLetter(string){return string.split(\"-\").map((word=>word.charAt(0).toUpperCase()+word.slice(1))).join(\"\")}function bindToggleAllEvent(toggleAllId,areaKey){$(`#${toggleAllId}`).off(\"click\").on(\"click\",(function(e){e.stopPropagation();const isExpand=$(this).hasClass(\"fa-angle-down\");$(this).attr(\"class\",\"fa-solid \"+(isExpand?\"fa-angle-up\":\"fa-angle-down\")),$(this).attr(\"title\",isExpand?\"一键折叠分组\":\"一键展开分组\");$(config_CONFIG.AREAS[areaKey].listSelector).find(\".script-group-header\").each((function(){const $header=$(this),$groupContent=$header.next(\".script-group-content\"),$icon=$header.find(\".group-toggle-icon\");isExpand?($groupContent.show(),$icon.attr(\"class\",\"fa-solid fa-angle-up group-toggle-icon\")):($groupContent.hide(),$icon.attr(\"class\",\"fa-solid fa-angle-down group-toggle-icon\"))})),function saveAllGroupFoldStates(areaKey,allFolded){const $area=$(config_CONFIG.AREAS[areaKey].listSelector),foldStates={};$area.find(\".script-group-header\").each((function(){const groupName=$(this).find(\"span\").text().split(\" (\")[0];foldStates[groupName]=allFolded}));const storageKey=`script_group_fold_state_${areaKey}`;localStorage.setItem(storageKey,JSON.stringify(foldStates))}(areaKey,!isExpand)}))}function resetAreaUI(areaKey){const config=config_CONFIG.AREAS[areaKey],$list=$(config.listSelector);return 0!==$list.length&&(function removeGrouping(areaKey){const config=config_CONFIG.AREAS[areaKey],$list=$(config.listSelector);if(0===$list.length)return!1;const $groupHeaders=$list.find(\".script-group-header\"),$groupContents=$list.find(\".script-group-content\");if(0===$groupHeaders.length||0===$groupContents.length)return!1;const $items=$list.find(config.itemSelector);return $items.each((function(){$(this).css({width:\"\",\"padding-left\":\"\"}).find(\".drag-handle\")})),$list.append($items),$groupHeaders.remove(),$groupContents.remove(),function restoreSortable(areaKey){const config=config_CONFIG.AREAS[areaKey],$list=$(config.listSelector);$list.length&&($list.find(\".drag-handle, \"+config.itemSelector).off(\"mousedown.groupui dragstart.groupui\"),$list.find(\".drag-handle\").show())}(areaKey),!0}(areaKey),$list.find(config.itemSelector).css(\"display\",\"\"),!0)}function updateFilterIcon(areaKey){const $icon=$(`#${areaKey}-filter-icon`);if(0===$icon.length)return;const config=[{class:\"fa-filter\",color:\"\",title:\"显示全部 (点击切换到仅显示开启)\"},{class:\"fa-check-circle\",color:\"\",title:\"仅显示开启 (点击切换到仅显示隐藏)\"},{class:\"fa-times-circle\",color:\"\",title:\"仅显示隐藏 (点击切换到显示全部)\"}][getFilterState(areaKey)];$icon.attr(\"class\",\"\").addClass(\"fa-solid \"+config.class),$icon.css(\"color\",config.color),$icon.attr(\"title\",config.title)}function updateGroupIcon(areaKey){const isGroupEnabled=getGroupingEnabledState(areaKey),$groupIcon=$(`#${areaKey}-group-icon`);$groupIcon.length>0&&($groupIcon.attr(\"class\",\"fa-solid \"+(isGroupEnabled?\"fa-folder-open\":\"fa-folder\")),$groupIcon.attr(\"title\",isGroupEnabled?\"关闭分组\":\"开启分组\"));const $toggleAll=$(`#${areaKey}-toggle-all`);$toggleAll.length>0&&(isGroupEnabled?$toggleAll.css(\"display\",\"\"):$toggleAll.css(\"display\",\"none\"))}function applyUIState(areaKey){if(!config_CONFIG.AREAS[areaKey])return console.log(`[FilterGroup]区域 ${areaKey} 配置不存在，跳过处理`),!1;const config=config_CONFIG.AREAS[areaKey],isGroupEnabled=getGroupingEnabledState(areaKey),filterState=getFilterState(areaKey);resetAreaUI(areaKey);const $list=$(config.listSelector);if(0===$list.length)return!1;return $list.find(config.itemSelector).each((function(){const $item=$(this);let isEnabled;isEnabled=config.isRegexType?!$item.find(\".disable_regex\").prop(\"checked\"):\"none\"!==$item.find(\".script-toggle-on\").css(\"display\"),0===filterState?$item.css(\"display\",\"\"):1===filterState?$item.css(\"display\",isEnabled?\"\":\"none\"):2===filterState&&$item.css(\"display\",isEnabled?\"none\":\"\")})),isGroupEnabled&&function applyGrouping(areaKey){const config=config_CONFIG.AREAS[areaKey],$list=$(config.listSelector);if(0===$list.length)return!1;const $items=$list.find(config.itemSelector);if(0===$items.length)return!1;const groups=groupScripts($items,config.nameSelector,config.isRegexType);if(!groups||0===groups.length)return!1;return!!groups.some((group=>null!==group.name))&&($list.children().detach(),groups.forEach((group=>{const groupName=null===group.name?\"未分组\":group.name,isFolded=function getGroupFoldState(areaKey,groupName,defaultState=!0){const storageKey=`script_group_fold_state_${areaKey}`,foldStates=JSON.parse(localStorage.getItem(storageKey)||\"{}\");return groupName in foldStates?foldStates[groupName]:defaultState}(areaKey,groupName,!0),visibleItems=group.items.filter((item=>\"none\"!==$(item).css(\"display\"))),$groupHeader=$(`\\n            <div class=\"script-group-header\" style=\"${config_CONFIG.STYLES.groupHeaderStyle}${0===visibleItems.length?\"display: none;\":\"\"}\">\\n                <span>${groupName} (${visibleItems.length})</span>\\n                <i class=\"fa-solid ${isFolded?\"fa-angle-down\":\"fa-angle-up\"} group-toggle-icon\"></i>\\n            </div>\\n        `),$groupContent=$(`\\n            <div class=\"script-group-content\" style=\"${config_CONFIG.STYLES.groupContentStyle}${isFolded||0===visibleItems.length?\" display: none;\":\"\"}\">\\n            </div>\\n        `);$list.append($groupHeader),$list.append($groupContent),group.items.forEach(($item=>{$item.css({width:\"97% !important\",\"padding-left\":\"6px\"}).find(\".drag-handle\").hide(),$groupContent.append($item)})),$groupHeader.on(\"click\",(function(){const $icon=$(this).find(\".group-toggle-icon\"),$content=$(this).next(\".script-group-content\"),isExpanded=$icon.hasClass(\"fa-angle-up\"),thisGroupName=$(this).find(\"span\").text().split(\" (\")[0];$icon.attr(\"class\",`fa-solid fa-angle-${isExpanded?\"down\":\"up\"} group-toggle-icon`),$content[isExpanded?\"hide\":\"show\"](),function saveGroupFoldState(areaKey,groupName,isFolded){const storageKey=`script_group_fold_state_${areaKey}`,foldStates=JSON.parse(localStorage.getItem(storageKey)||\"{}\");foldStates[groupName]=isFolded,localStorage.setItem(storageKey,JSON.stringify(foldStates))}(areaKey,thisGroupName,isExpanded)}))})),function fixSortableAfterGrouping(areaKey){const config=config_CONFIG.AREAS[areaKey],$list=$(config.listSelector);$list.length&&($list.find(\".drag-handle\").hide(),$list.find(\".drag-handle, .script-group-header, .script-group-content, \"+config.itemSelector).off(\"mousedown.groupui dragstart.groupui\").on(\"mousedown.groupui dragstart.groupui\",(function(e){return e.stopPropagation(),e.preventDefault(),!1})),console.debug(`[FilterGroup]已禁用区域 ${areaKey} 的拖拽功能`))}(areaKey),!0)}(areaKey),!0}function applyAllUIStates(){setTimeout((()=>{for(const areaKey in config_CONFIG.AREAS){applyUIState(areaKey)||setTimeout((()=>{applyUIState(areaKey)}),500)}}),100)}const unifiedUI={initialize:initializeUnifiedUI,applyState:applyUIState,applyAllStates:applyAllUIStates,resetUI:resetAreaUI};$((function(){setTimeout((function(){!function initializeAllUI(){console.log(\"[FilterGroup]正在初始化统一UI组件...\"),initializeUnifiedUI()}()}),500)})),window.unifiedUI=unifiedUI,$((function(){console.log(\"正则脚本统一UI管理已初始化\")}));",
  "info": "**作者**：Lai\n**版本**：250505-2\n**脚本说明：** 根据正则/酒馆助手脚本开关状态筛选条目，快速切换显示，并支持分组视图。\n\n## 功能简介\n\n此脚本在全局和局部正则/酒馆助手脚本库标题旁添加了分组、筛选与刷新图标，点击图标即可切换视图。\n\n## ！！非常重要！！\n**如果在【开启分组视图】的情况下拖动了条目/分组，可能会【丢失所有正则】！虽然脚本【已经禁用】了分组视图下的拖拽功能，但是如果你依然发现自己~~（不知为何）~~拖动了条目，请【不要松手按 F5/cmd+R 直接刷新网页或者直接锁屏手机】打断这个过程。**\n\n上述情况应该【极其少见】，如果你发现自己依然能够拖拽，请回帖 at 我。\n\n在没有打开分组视图（也就是条目左边有三个小横杠）的时候是能够正常拖拽改变顺序的。\n\n## 筛选功能\n\n各部条目开关状态筛选条目，支持循环切换三种显示模式：\n\n- :clipboard: **显示全部** - 显示所有可用正则/酒馆助手脚本\n- :white_check_mark: **仅显示已开启** - 筛选出当前已激活的正则/酒馆助手脚本（打勾图标）\n- :x: **仅显示已隐藏** - 筛选出当前已关闭的正则/酒馆助手脚本（打叉图标）\n\n## 分组功能\n\n脚本会根据名称前缀自动为**连续的**条目建立分组，从而得到美观的分组视图。分组支持多种命名格式：\n\n- **【分组名】脚本名称** - 使用中文方括号\n- **[分组名]脚本名称** - 使用英文方括号\n- **分组名-脚本名称** - 使用短横线分隔\n\n如需支持更多格式，欢迎回帖提出。\n\n### 分组特性：\n\n- **根据前缀分组**：根据脚本名称中的前缀自动分组\n- **顺序保持**：保持条目的原始排序\n- **折叠/展开**：可一键展开或折叠所有分组，提高界面整洁度\n- **分组统计**：显示每个分组内包含的条目数量\n\n通过标题旁的文件夹图标可以随时切换启用/禁用分组功能。\n\n## 使用提示\n\n- 使用分组功能，需要编辑好前缀与条目顺序。\n- 分组和筛选功能可以同时使用。\n- 分组状态（包括折叠状态）和筛选设置会记录在浏览器本地存储中，刷新了也能保持。\n- 支持与 https://discord.com/channels/1291925535324110879/1344362686900605043 等脚本共同使用，不会冲突。\n- 注意：出于性能考虑，更改条目设置（比如开关状态）后，视图不会自动刷新，请手动点击标题旁的“刷新”小图标。\n- 注意：某些情况视图可能会出错，请试试点击“刷新”小图标，或者刷新酒馆网页。",
  "buttons": [],
  "createdAt": "2025-05-06T00:06:56.054Z",
  "updatedAt": "2025-05-06T00:06:56.054Z"
}